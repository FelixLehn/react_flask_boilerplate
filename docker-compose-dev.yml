version: '3.7'
x-airflow-common: 
    &airflow-common
    image: ${AIRFLOW_IMAGE_NAME:-apache/airflow:2.0.1}
    environment: 
        &airflow-common-env
        AIRFLOW__CORE__EXECUTOR: CeleryExecutor
        AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@db/airflow
        AIRFLOW__CELERY__RESULT_BACKEND: db+postgresql://postgres:postgres@db/airflow
        AIRFLOW__CELERY__BROKER_URL: redis://:@redis:6379/0
        AIRFLOW__CORE__FERNET_KEY: ""
        AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "true"
        AIRFLOW__CORE__LOAD_EXAMPLES: "true"
    volumes:
        - ./airflow/dags:/opt/airflow/dags
        - ./airflow/logs:/opt/airflow/logs
        - ./airflow/plugins:/opt/airflow/plugins
    user: "${AIRFLOW_UID:-50000}:${AIRFLOW_GID:-50000}"
    depends_on:
        - redis
        - db
services:
    client:
        container_name: client_dev
        build:
            context: ./frontend
            dockerfile: Dockerfile
        tty: true
        stdin_open: true
        environment: 
            - CHOKIDAR_USEPOLLING=true
        ports:
            - "3000:3000"
        volumes: 
            - ./frontend:/usr/src/app
            - /usr/src/app/node_modules
    db:
        container_name: db_dev
        image: postgres:12-alpine
        ports:
            - 5432 
        volumes:
            - postgres_data:/var/lib/postgresql/data/
        env_file: 
            - ./.env.prod.db
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "airflow"]
            interval: 5s
            retries: 5
    api:
        container_name: api_dev
        build: 
            context: ./backend
            dockerfile: Dockerfile
        ports: 
            - 5000:5000
        env_file: 
            - ./.env.dev
        volumes:
            - ./backend/:/usr/src/app
        depends_on: 
            - db

    redis:
        image: redis:latest
        ports:
            - 6379:6379
        healthcheck:
            test: ["CMD", "redis-cli", "ping"]
            interval: 5s
            timeout: 30s
            retries: 50
        restart: always

    airflow-webserver:
        <<: *airflow-common
        command: webserver
        ports:
            - 8080:8080
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always

    airflow-scheduler:
        <<: *airflow-common
        command: scheduler
        restart: always

    airflow-worker:
        <<: *airflow-common
        command: celery worker
        restart: always

    airflow-init:
        <<: *airflow-common
        command: version
        environment:
            <<: *airflow-common-env
            _AIRFLOW_DB_UPGRADE: "true"
            _AIRFLOW_WWW_USER_CREATE: "true"
            _AIRFLOW_WWW_USER_USERNAME: ${_AIRFLOW_WWW_USER_USERNAME:-airflow}
            _AIRFLOW_WWW_USER_PASSWORD: ${_AIRFLOW_WWW_USER_PASSWORD:-airflow}

    flower:
        <<: *airflow-common
        command: celery flower
        ports:
            - 5555:5555
        healthcheck:
            test: ["CMD", "curl", "--fail", "http://localhost:5555/"]
            interval: 10s
            timeout: 10s
            retries: 5
        restart: always
            
volumes:
    postgres_data:
        driver: local
    appdata:
        driver: local